// @generated by protobuf-ts 2.9.0 with parameter server_grpc1,client_none,optimize_code_size
// @generated from protobuf file "message.proto" (syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Position
 */
export interface Position {
    /**
     * @generated from protobuf field: float x = 1;
     */
    x: number;
    /**
     * @generated from protobuf field: float y = 2;
     */
    y: number;
    /**
     * @generated from protobuf field: float z = 3;
     */
    z: number;
}
/**
 * @generated from protobuf message Rotation
 */
export interface Rotation {
    /**
     * @generated from protobuf field: float x = 1;
     */
    x: number;
    /**
     * @generated from protobuf field: float y = 2;
     */
    y: number;
    /**
     * @generated from protobuf field: float z = 3;
     */
    z: number;
    /**
     * @generated from protobuf field: float w = 4;
     */
    w: number;
}
/**
 * @generated from protobuf message Scale
 */
export interface Scale {
    /**
     * @generated from protobuf field: float x = 1;
     */
    x: number;
    /**
     * @generated from protobuf field: float y = 2;
     */
    y: number;
    /**
     * @generated from protobuf field: float z = 3;
     */
    z: number;
}
/**
 * @generated from protobuf message Color
 */
export interface Color {
    /**
     * @generated from protobuf field: float x = 1;
     */
    x: number;
    /**
     * @generated from protobuf field: float y = 2;
     */
    y: number;
    /**
     * @generated from protobuf field: float z = 3;
     */
    z: number;
}
/**
 * @generated from protobuf message SpatialInfo
 */
export interface SpatialInfo {
    /**
     * @generated from protobuf field: Position position = 1;
     */
    position?: Position;
    /**
     * @generated from protobuf field: Rotation rotation = 2;
     */
    rotation?: Rotation;
    /**
     * @generated from protobuf field: Scale scale = 3;
     */
    scale?: Scale;
}
/**
 * @generated from protobuf message Frustum
 */
export interface Frustum {
    /**
     * @generated from protobuf field: Position n1 = 1;
     */
    n1?: Position;
    /**
     * @generated from protobuf field: Position n2 = 2;
     */
    n2?: Position;
    /**
     * @generated from protobuf field: Position n3 = 3;
     */
    n3?: Position;
    /**
     * @generated from protobuf field: Position n4 = 4;
     */
    n4?: Position;
    /**
     * @generated from protobuf field: Position f1 = 5;
     */
    f1?: Position;
    /**
     * @generated from protobuf field: Position f2 = 6;
     */
    f2?: Position;
    /**
     * @generated from protobuf field: Position f3 = 7;
     */
    f3?: Position;
    /**
     * @generated from protobuf field: Position f4 = 8;
     */
    f4?: Position;
}
/**
 * @generated from protobuf message UserInfo
 */
export interface UserInfo {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: UserInfo.ClientType type = 2;
     */
    type: UserInfo_ClientType;
    /**
     * @generated from protobuf field: string roomId = 3;
     */
    roomId: string;
    /**
     * @generated from protobuf field: SpatialInfo headSpatialInfo = 4;
     */
    headSpatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: SpatialInfo leftControllerSpatialInfo = 5;
     */
    leftControllerSpatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: SpatialInfo rightControllerSpatialInfo = 6;
     */
    rightControllerSpatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: Frustum frustum = 7;
     */
    frustum?: Frustum;
    /**
     * @generated from protobuf field: string documentId = 8;
     */
    documentId: string;
    /**
     * @generated from protobuf field: string dataset = 9;
     */
    dataset: string;
    /**
     * @generated from protobuf field: SpatialInfo graphSpatialInfo = 10;
     */
    graphSpatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: SpatialInfo documentPanelSpatialInfo = 11;
     */
    documentPanelSpatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: repeated string nearCursorNodeIds = 12;
     */
    nearCursorNodeIds: string[];
    /**
     * @generated from protobuf field: repeated float nearCursorNodeWeights = 13;
     */
    nearCursorNodeWeights: number[];
    /**
     * @generated from protobuf field: bool override = 14;
     */
    override: boolean;
    /**
     * @generated from protobuf field: string headTowardsObject = 15;
     */
    headTowardsObject: string;
    /**
     * @generated from protobuf field: optional SpatialInfo simulatedPCPose = 16;
     */
    simulatedPCPose?: SpatialInfo;
}
/**
 * @generated from protobuf enum UserInfo.ClientType
 */
export enum UserInfo_ClientType {
    /**
     * @generated from protobuf enum value: DESKTOP = 0;
     */
    DESKTOP = 0,
    /**
     * @generated from protobuf enum value: VR = 1;
     */
    VR = 1
}
/**
 * @generated from protobuf message UserList
 */
export interface UserList {
    /**
     * @generated from protobuf field: repeated UserInfo users = 1;
     */
    users: UserInfo[];
}
/**
 * @generated from protobuf message Node
 */
export interface Node {
    /**
     * @generated from protobuf field: string roomId = 1;
     */
    roomId: string;
    /**
     * @generated from protobuf field: string id = 2;
     */
    id: string;
    /**
     * @generated from protobuf field: SpatialInfo spatialInfo = 3;
     */
    spatialInfo?: SpatialInfo;
    /**
     * @generated from protobuf field: string name = 4;
     */
    name: string;
    /**
     * @generated from protobuf field: string data = 5;
     */
    data: string;
    /**
     * @generated from protobuf field: string createdFrom = 6;
     */
    createdFrom: string;
    /**
     * @generated from protobuf field: string createdBy = 7;
     */
    createdBy: string;
    /**
     * @generated from protobuf field: repeated string highlightedBy = 8;
     */
    highlightedBy: string[];
    /**
     * @generated from protobuf field: repeated DocumentReference references = 9;
     */
    references: DocumentReference[];
    /**
     * @generated from protobuf field: string updatedBy = 10;
     */
    updatedBy: string;
    /**
     * @generated from protobuf field: string dataType = 11;
     */
    dataType: string;
    /**
     * @generated from protobuf field: UserKey userKey = 12;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message DocumentReference
 */
export interface DocumentReference {
    /**
     * @generated from protobuf field: string docId = 1;
     */
    docId: string;
    /**
     * @generated from protobuf field: int32 startIndex = 2;
     */
    startIndex: number;
    /**
     * @generated from protobuf field: int32 endIndex = 3;
     */
    endIndex: number;
    /**
     * @generated from protobuf field: string createdBy = 4;
     */
    createdBy: string;
}
/**
 * @generated from protobuf message NodeSpatialInfo
 */
export interface NodeSpatialInfo {
    /**
     * @generated from protobuf field: string roomId = 1;
     */
    roomId: string;
    /**
     * @generated from protobuf field: string id = 2;
     */
    id: string;
    /**
     * @generated from protobuf field: SpatialInfo spatialInfo = 3;
     */
    spatialInfo?: SpatialInfo;
}
/**
 * @generated from protobuf message NodeList
 */
export interface NodeList {
    /**
     * @generated from protobuf field: repeated NodeSpatialInfo SpatialInfos = 1 [json_name = "SpatialInfos"];
     */
    spatialInfos: NodeSpatialInfo[];
    /**
     * @generated from protobuf field: UserKey userKey = 2;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message Link
 */
export interface Link {
    /**
     * @generated from protobuf field: int32 source = 1;
     */
    source: number;
    /**
     * @generated from protobuf field: int32 target = 2;
     */
    target: number;
    /**
     * @generated from protobuf field: string id = 3;
     */
    id: string;
    /**
     * @generated from protobuf field: string name = 4;
     */
    name: string;
    /**
     * @generated from protobuf field: string data = 5;
     */
    data: string;
    /**
     * @generated from protobuf field: string roomId = 6;
     */
    roomId: string;
    /**
     * @generated from protobuf field: string createdFrom = 7;
     */
    createdFrom: string;
    /**
     * @generated from protobuf field: string createdBy = 8;
     */
    createdBy: string;
    /**
     * @generated from protobuf field: string updatedBy = 9;
     */
    updatedBy: string;
    /**
     * @generated from protobuf field: UserKey userKey = 10;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message LinkList
 */
export interface LinkList {
    /**
     * @generated from protobuf field: repeated Link links = 1;
     */
    links: Link[];
}
/**
 * @generated from protobuf message GraphViewData
 */
export interface GraphViewData {
    /**
     * @generated from protobuf field: repeated Node nodes = 1;
     */
    nodes: Node[];
    /**
     * @generated from protobuf field: repeated Link links = 2;
     */
    links: Link[];
    /**
     * @generated from protobuf field: SpatialInfo spatialInfo = 3;
     */
    spatialInfo?: SpatialInfo;
}
/**
 * @generated from protobuf message ClientActions
 */
export interface ClientActions {
    /**
     * @generated from protobuf field: UserKey userKey = 1;
     */
    userKey?: UserKey;
    /**
     * @generated from protobuf field: repeated int32 clickedNodes = 2;
     */
    clickedNodes: number[];
    /**
     * @generated from protobuf field: repeated int32 hoveredNodes = 3;
     */
    hoveredNodes: number[];
    /**
     * @generated from protobuf field: string fromView = 5;
     */
    fromView: string;
}
/**
 * @generated from protobuf message TrackerInfo
 */
export interface TrackerInfo {
    /**
     * @generated from protobuf field: string trackerId = 1;
     */
    trackerId: string;
    /**
     * @generated from protobuf field: Position position = 2;
     */
    position?: Position;
    /**
     * @generated from protobuf field: Rotation rotation = 3;
     */
    rotation?: Rotation;
}
/**
 * @generated from protobuf message HighlightedList
 */
export interface HighlightedList {
    /**
     * @generated from protobuf field: repeated int32 highlighted = 1;
     */
    highlighted: number[];
}
/**
 * @generated from protobuf message ServerNodesStatus
 */
export interface ServerNodesStatus {
    /**
     * @generated from protobuf field: map<string, HighlightedList> hightlighted = 1;
     */
    hightlighted: {
        [key: string]: HighlightedList;
    };
}
/**
 * @generated from protobuf message EmptyMessage
 */
export interface EmptyMessage {
    /**
     * @generated from protobuf field: bool isRecieved = 1;
     */
    isRecieved: boolean;
}
/**
 * @generated from protobuf message InitialRequest
 */
export interface InitialRequest {
    /**
     * @generated from protobuf field: InitialRequest.ClientViewType RequestedViewType = 1 [json_name = "RequestedViewType"];
     */
    requestedViewType: InitialRequest_ClientViewType;
    /**
     * @generated from protobuf field: UserKey userKey = 2;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf enum InitialRequest.ClientViewType
 */
export enum InitialRequest_ClientViewType {
    /**
     * @generated from protobuf enum value: VIEW_2D = 0;
     */
    VIEW_2D = 0,
    /**
     * @generated from protobuf enum value: VIEW_3D = 1;
     */
    VIEW_3D = 1
}
/**
 * @generated from protobuf message InitialGraphData
 */
export interface InitialGraphData {
    /**
     * @generated from protobuf field: GraphViewData graphViewData = 1;
     */
    graphViewData?: GraphViewData;
    /**
     * @generated from protobuf field: ServerNodesStatus nodesStatus = 2;
     */
    nodesStatus?: ServerNodesStatus;
}
/**
 * @generated from protobuf message Room
 */
export interface Room {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: repeated UserInfo users = 2;
     */
    users: UserInfo[];
}
/**
 * @generated from protobuf message RoomList
 */
export interface RoomList {
    /**
     * @generated from protobuf field: repeated Room rooms = 1;
     */
    rooms: Room[];
}
/**
 * @generated from protobuf message JoinResponse
 */
export interface JoinResponse {
    /**
     * @generated from protobuf field: string error = 1;
     */
    error: string;
    /**
     * @generated from protobuf field: string msg = 2;
     */
    msg: string;
}
/**
 * @generated from protobuf message ServerGraphStatus
 */
export interface ServerGraphStatus {
    /**
     * @generated from protobuf field: ServerNodesStatus nodesStatus = 1;
     */
    nodesStatus?: ServerNodesStatus;
    /**
     * @generated from protobuf field: InitialGraphData initialGraphData = 2;
     */
    initialGraphData?: InitialGraphData;
}
/**
 * @generated from protobuf message Document
 */
export interface Document {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string title = 2;
     */
    title: string;
    /**
     * @generated from protobuf field: string date = 3;
     */
    date: string;
    /**
     * @generated from protobuf field: string author = 4;
     */
    author: string;
    /**
     * @generated from protobuf field: string content = 5;
     */
    content: string;
    /**
     * @generated from protobuf field: string fileName = 6;
     */
    fileName: string;
}
/**
 * @generated from protobuf message DocumentList
 */
export interface DocumentList {
    /**
     * @generated from protobuf field: repeated Document documents = 1;
     */
    documents: Document[];
}
/**
 * @generated from protobuf message IdList
 */
export interface IdList {
    /**
     * @generated from protobuf field: repeated string ids = 1;
     */
    ids: string[];
}
/**
 * @generated from protobuf message DocumentState
 */
export interface DocumentState {
    /**
     * @generated from protobuf field: map<string, IdList> documentStates = 1;
     */
    documentStates: {
        [key: string]: IdList;
    };
}
/**
 * @generated from protobuf message RequestById
 */
export interface RequestById {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: UserKey userKey = 2;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message BoardcastMessage
 */
export interface BoardcastMessage {
    /**
     * @generated from protobuf field: string msg = 1;
     */
    msg: string;
    /**
     * @generated from protobuf field: UserKey userKey = 2;
     */
    userKey?: UserKey;
    /**
     * @generated from protobuf field: BoardcastMessage.Action action = 3;
     */
    action: BoardcastMessage_Action;
}
/**
 * @generated from protobuf enum BoardcastMessage.Action
 */
export enum BoardcastMessage_Action {
    /**
     * @generated from protobuf enum value: HIGHLIGHT = 0;
     */
    HIGHLIGHT = 0
}
/**
 * @generated from protobuf message ReplayMessage
 */
export interface ReplayMessage {
    /**
     * @generated from protobuf field: string msg = 1;
     */
    msg: string;
    /**
     * @generated from protobuf field: UserKey userKey = 2;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message ReplayRecord
 */
export interface ReplayRecord {
    /**
     * @generated from protobuf field: UserKey userKey = 1;
     */
    userKey?: UserKey;
}
/**
 * @generated from protobuf message ReplayList
 */
export interface ReplayList {
    /**
     * @generated from protobuf field: repeated ReplayRecord records = 1;
     */
    records: ReplayRecord[];
}
/**
 * @generated from protobuf message WebRTCOffer
 */
export interface WebRTCOffer {
    /**
     * @generated from protobuf field: string data = 1;
     */
    data: string;
}
/**
 * @generated from protobuf message WebRTCAnswer
 */
export interface WebRTCAnswer {
    /**
     * @generated from protobuf field: string data = 1;
     */
    data: string;
}
/**
 * @generated from protobuf message TimelineData
 */
export interface TimelineData {
    /**
     * @generated from protobuf field: map<string, IdList> data = 1;
     */
    data: {
        [key: string]: IdList;
    };
}
/**
 * @generated from protobuf message UserKey
 */
export interface UserKey {
    /**
     * @generated from protobuf field: string userId = 1;
     */
    userId: string;
    /**
     * @generated from protobuf field: string roomId = 2;
     */
    roomId: string;
    /**
     * @generated from protobuf field: UserInfo.ClientType type = 3;
     */
    type: UserInfo_ClientType;
    /**
     * @generated from protobuf field: InitialRequest.ClientViewType viewType = 4;
     */
    viewType: InitialRequest_ClientViewType;
}
// @generated message type with reflection information, may provide speed optimized methods
class Position$Type extends MessageType<Position> {
    constructor() {
        super("Position", [
            { no: 1, name: "x", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "y", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "z", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Position
 */
export const Position = new Position$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rotation$Type extends MessageType<Rotation> {
    constructor() {
        super("Rotation", [
            { no: 1, name: "x", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "y", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "z", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 4, name: "w", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Rotation
 */
export const Rotation = new Rotation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scale$Type extends MessageType<Scale> {
    constructor() {
        super("Scale", [
            { no: 1, name: "x", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "y", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "z", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Scale
 */
export const Scale = new Scale$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Color$Type extends MessageType<Color> {
    constructor() {
        super("Color", [
            { no: 1, name: "x", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "y", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "z", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Color
 */
export const Color = new Color$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SpatialInfo$Type extends MessageType<SpatialInfo> {
    constructor() {
        super("SpatialInfo", [
            { no: 1, name: "position", kind: "message", T: () => Position },
            { no: 2, name: "rotation", kind: "message", T: () => Rotation },
            { no: 3, name: "scale", kind: "message", T: () => Scale }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message SpatialInfo
 */
export const SpatialInfo = new SpatialInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Frustum$Type extends MessageType<Frustum> {
    constructor() {
        super("Frustum", [
            { no: 1, name: "n1", kind: "message", T: () => Position },
            { no: 2, name: "n2", kind: "message", T: () => Position },
            { no: 3, name: "n3", kind: "message", T: () => Position },
            { no: 4, name: "n4", kind: "message", T: () => Position },
            { no: 5, name: "f1", kind: "message", T: () => Position },
            { no: 6, name: "f2", kind: "message", T: () => Position },
            { no: 7, name: "f3", kind: "message", T: () => Position },
            { no: 8, name: "f4", kind: "message", T: () => Position }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Frustum
 */
export const Frustum = new Frustum$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserInfo$Type extends MessageType<UserInfo> {
    constructor() {
        super("UserInfo", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["UserInfo.ClientType", UserInfo_ClientType] },
            { no: 3, name: "roomId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "headSpatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 5, name: "leftControllerSpatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 6, name: "rightControllerSpatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 7, name: "frustum", kind: "message", T: () => Frustum },
            { no: 8, name: "documentId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "dataset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "graphSpatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 11, name: "documentPanelSpatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 12, name: "nearCursorNodeIds", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "nearCursorNodeWeights", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 2 /*ScalarType.FLOAT*/ },
            { no: 14, name: "override", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "headTowardsObject", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "simulatedPCPose", kind: "message", T: () => SpatialInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UserInfo
 */
export const UserInfo = new UserInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserList$Type extends MessageType<UserList> {
    constructor() {
        super("UserList", [
            { no: 1, name: "users", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UserList
 */
export const UserList = new UserList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Node$Type extends MessageType<Node> {
    constructor() {
        super("Node", [
            { no: 1, name: "roomId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "spatialInfo", kind: "message", T: () => SpatialInfo },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "data", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "createdFrom", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "createdBy", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "highlightedBy", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "references", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentReference },
            { no: 10, name: "updatedBy", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "dataType", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Node
 */
export const Node = new Node$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentReference$Type extends MessageType<DocumentReference> {
    constructor() {
        super("DocumentReference", [
            { no: 1, name: "docId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "startIndex", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "endIndex", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "createdBy", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message DocumentReference
 */
export const DocumentReference = new DocumentReference$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeSpatialInfo$Type extends MessageType<NodeSpatialInfo> {
    constructor() {
        super("NodeSpatialInfo", [
            { no: 1, name: "roomId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "spatialInfo", kind: "message", T: () => SpatialInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message NodeSpatialInfo
 */
export const NodeSpatialInfo = new NodeSpatialInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NodeList$Type extends MessageType<NodeList> {
    constructor() {
        super("NodeList", [
            { no: 1, name: "SpatialInfos", kind: "message", jsonName: "SpatialInfos", repeat: 1 /*RepeatType.PACKED*/, T: () => NodeSpatialInfo },
            { no: 2, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message NodeList
 */
export const NodeList = new NodeList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Link$Type extends MessageType<Link> {
    constructor() {
        super("Link", [
            { no: 1, name: "source", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "target", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "data", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "roomId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "createdFrom", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "createdBy", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "updatedBy", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Link
 */
export const Link = new Link$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LinkList$Type extends MessageType<LinkList> {
    constructor() {
        super("LinkList", [
            { no: 1, name: "links", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Link }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message LinkList
 */
export const LinkList = new LinkList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GraphViewData$Type extends MessageType<GraphViewData> {
    constructor() {
        super("GraphViewData", [
            { no: 1, name: "nodes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Node },
            { no: 2, name: "links", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Link },
            { no: 3, name: "spatialInfo", kind: "message", T: () => SpatialInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message GraphViewData
 */
export const GraphViewData = new GraphViewData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClientActions$Type extends MessageType<ClientActions> {
    constructor() {
        super("ClientActions", [
            { no: 1, name: "userKey", kind: "message", T: () => UserKey },
            { no: 2, name: "clickedNodes", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "hoveredNodes", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "fromView", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ClientActions
 */
export const ClientActions = new ClientActions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrackerInfo$Type extends MessageType<TrackerInfo> {
    constructor() {
        super("TrackerInfo", [
            { no: 1, name: "trackerId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "position", kind: "message", T: () => Position },
            { no: 3, name: "rotation", kind: "message", T: () => Rotation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message TrackerInfo
 */
export const TrackerInfo = new TrackerInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HighlightedList$Type extends MessageType<HighlightedList> {
    constructor() {
        super("HighlightedList", [
            { no: 1, name: "highlighted", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message HighlightedList
 */
export const HighlightedList = new HighlightedList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerNodesStatus$Type extends MessageType<ServerNodesStatus> {
    constructor() {
        super("ServerNodesStatus", [
            { no: 1, name: "hightlighted", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => HighlightedList } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ServerNodesStatus
 */
export const ServerNodesStatus = new ServerNodesStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmptyMessage$Type extends MessageType<EmptyMessage> {
    constructor() {
        super("EmptyMessage", [
            { no: 1, name: "isRecieved", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message EmptyMessage
 */
export const EmptyMessage = new EmptyMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitialRequest$Type extends MessageType<InitialRequest> {
    constructor() {
        super("InitialRequest", [
            { no: 1, name: "RequestedViewType", kind: "enum", jsonName: "RequestedViewType", T: () => ["InitialRequest.ClientViewType", InitialRequest_ClientViewType] },
            { no: 2, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message InitialRequest
 */
export const InitialRequest = new InitialRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitialGraphData$Type extends MessageType<InitialGraphData> {
    constructor() {
        super("InitialGraphData", [
            { no: 1, name: "graphViewData", kind: "message", T: () => GraphViewData },
            { no: 2, name: "nodesStatus", kind: "message", T: () => ServerNodesStatus }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message InitialGraphData
 */
export const InitialGraphData = new InitialGraphData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Room$Type extends MessageType<Room> {
    constructor() {
        super("Room", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "users", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Room
 */
export const Room = new Room$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RoomList$Type extends MessageType<RoomList> {
    constructor() {
        super("RoomList", [
            { no: 1, name: "rooms", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Room }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RoomList
 */
export const RoomList = new RoomList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinResponse$Type extends MessageType<JoinResponse> {
    constructor() {
        super("JoinResponse", [
            { no: 1, name: "error", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "msg", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message JoinResponse
 */
export const JoinResponse = new JoinResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerGraphStatus$Type extends MessageType<ServerGraphStatus> {
    constructor() {
        super("ServerGraphStatus", [
            { no: 1, name: "nodesStatus", kind: "message", T: () => ServerNodesStatus },
            { no: 2, name: "initialGraphData", kind: "message", T: () => InitialGraphData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ServerGraphStatus
 */
export const ServerGraphStatus = new ServerGraphStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Document$Type extends MessageType<Document> {
    constructor() {
        super("Document", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "date", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "author", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "fileName", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Document
 */
export const Document = new Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentList$Type extends MessageType<DocumentList> {
    constructor() {
        super("DocumentList", [
            { no: 1, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Document }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message DocumentList
 */
export const DocumentList = new DocumentList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IdList$Type extends MessageType<IdList> {
    constructor() {
        super("IdList", [
            { no: 1, name: "ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message IdList
 */
export const IdList = new IdList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentState$Type extends MessageType<DocumentState> {
    constructor() {
        super("DocumentState", [
            { no: 1, name: "documentStates", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => IdList } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message DocumentState
 */
export const DocumentState = new DocumentState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RequestById$Type extends MessageType<RequestById> {
    constructor() {
        super("RequestById", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message RequestById
 */
export const RequestById = new RequestById$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BoardcastMessage$Type extends MessageType<BoardcastMessage> {
    constructor() {
        super("BoardcastMessage", [
            { no: 1, name: "msg", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "userKey", kind: "message", T: () => UserKey },
            { no: 3, name: "action", kind: "enum", T: () => ["BoardcastMessage.Action", BoardcastMessage_Action] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message BoardcastMessage
 */
export const BoardcastMessage = new BoardcastMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReplayMessage$Type extends MessageType<ReplayMessage> {
    constructor() {
        super("ReplayMessage", [
            { no: 1, name: "msg", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ReplayMessage
 */
export const ReplayMessage = new ReplayMessage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReplayRecord$Type extends MessageType<ReplayRecord> {
    constructor() {
        super("ReplayRecord", [
            { no: 1, name: "userKey", kind: "message", T: () => UserKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ReplayRecord
 */
export const ReplayRecord = new ReplayRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReplayList$Type extends MessageType<ReplayList> {
    constructor() {
        super("ReplayList", [
            { no: 1, name: "records", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReplayRecord }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ReplayList
 */
export const ReplayList = new ReplayList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WebRTCOffer$Type extends MessageType<WebRTCOffer> {
    constructor() {
        super("WebRTCOffer", [
            { no: 1, name: "data", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message WebRTCOffer
 */
export const WebRTCOffer = new WebRTCOffer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WebRTCAnswer$Type extends MessageType<WebRTCAnswer> {
    constructor() {
        super("WebRTCAnswer", [
            { no: 1, name: "data", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message WebRTCAnswer
 */
export const WebRTCAnswer = new WebRTCAnswer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TimelineData$Type extends MessageType<TimelineData> {
    constructor() {
        super("TimelineData", [
            { no: 1, name: "data", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => IdList } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message TimelineData
 */
export const TimelineData = new TimelineData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserKey$Type extends MessageType<UserKey> {
    constructor() {
        super("UserKey", [
            { no: 1, name: "userId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "roomId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["UserInfo.ClientType", UserInfo_ClientType] },
            { no: 4, name: "viewType", kind: "enum", T: () => ["InitialRequest.ClientViewType", InitialRequest_ClientViewType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UserKey
 */
export const UserKey = new UserKey$Type();
/**
 * @generated ServiceType for protobuf service EchoService
 */
export const EchoService = new ServiceType("EchoService", [
    { name: "GetInitialGraphData", options: {}, I: InitialRequest, O: InitialGraphData },
    { name: "UpdateNodesStatus", options: {}, I: ClientActions, O: ServerNodesStatus },
    { name: "GetGraphData", serverStreaming: true, options: {}, I: RequestById, O: GraphViewData },
    { name: "GetNodes", serverStreaming: true, options: {}, I: InitialRequest, O: NodeList },
    { name: "GetLinks", serverStreaming: true, options: {}, I: RequestById, O: LinkList },
    { name: "GetNodesStatus", serverStreaming: true, options: {}, I: RequestById, O: ServerNodesStatus },
    { name: "GetAllUsers", serverStreaming: true, options: {}, I: EmptyMessage, O: UserList },
    { name: "GetAllUsersByRoomId", serverStreaming: true, options: {}, I: RequestById, O: UserList },
    { name: "GetAllRooms", serverStreaming: true, options: {}, I: EmptyMessage, O: RoomList },
    { name: "Join", options: {}, I: UserInfo, O: UserInfo },
    { name: "Leave", options: {}, I: UserInfo, O: EmptyMessage },
    { name: "UpdateUserStatus", options: {}, I: UserInfo, O: EmptyMessage },
    { name: "AddNode", options: {}, I: Node, O: Node },
    { name: "UpdateNode", options: {}, I: Node, O: EmptyMessage },
    { name: "RemoveNode", options: {}, I: Node, O: EmptyMessage },
    { name: "MergeNodes", options: {}, I: NodeList, O: EmptyMessage },
    { name: "AddLink", options: {}, I: Link, O: EmptyMessage },
    { name: "UpdateLink", options: {}, I: Link, O: EmptyMessage },
    { name: "RemoveLink", options: {}, I: Link, O: EmptyMessage },
    { name: "GetDoument", options: {}, I: RequestById, O: Document },
    { name: "UpdateDocumentState", options: {}, I: RequestById, O: EmptyMessage },
    { name: "GetAllDouments", serverStreaming: true, options: {}, I: RequestById, O: DocumentList },
    { name: "GetDocumentState", serverStreaming: true, options: {}, I: RequestById, O: DocumentState },
    { name: "SendBoardcastMessage", options: {}, I: BoardcastMessage, O: EmptyMessage },
    { name: "GetBoardcastMessage", serverStreaming: true, options: {}, I: RequestById, O: BoardcastMessage },
    { name: "GetReplayList", options: {}, I: RequestById, O: ReplayList },
    { name: "GetReplay", serverStreaming: true, options: {}, I: ReplayMessage, O: ReplayMessage },
    { name: "SetWebRTCOffer", options: {}, I: RequestById, O: EmptyMessage },
    { name: "GetWebRTCOffer", options: {}, I: RequestById, O: WebRTCOffer },
    { name: "GetWebRTCOfferStream", serverStreaming: true, options: {}, I: RequestById, O: WebRTCOffer },
    { name: "SetWebRTCAnswer", options: {}, I: RequestById, O: EmptyMessage },
    { name: "GetWebRTCAnswer", options: {}, I: RequestById, O: WebRTCAnswer },
    { name: "GetWebRTCAnswerStream", serverStreaming: true, options: {}, I: RequestById, O: WebRTCAnswer },
    { name: "GetTrackerInfoStream", serverStreaming: true, options: {}, I: RequestById, O: TrackerInfo },
    { name: "GetTimelineDataStream", serverStreaming: true, options: {}, I: RequestById, O: TimelineData }
]);
